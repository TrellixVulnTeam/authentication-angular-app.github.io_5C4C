{"ast":null,"code":"import { Observable, Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../alert/alert.component\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\n\nfunction AuthComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \" This field isn't valid. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AuthComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" This field isn't valid. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let AuthComponent = /*#__PURE__*/(() => {\n  class AuthComponent {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n      this.isLoggedInMode = true;\n      this.isError = false;\n      this.errorObj = {\n        status: null,\n        message: null,\n        name: null,\n        messageHeader: null\n      };\n      this._successAuth = new Subject();\n    }\n\n    ngOnInit() {}\n\n    onSwitchMode() {\n      this.isLoggedInMode = !this.isLoggedInMode;\n    }\n\n    onSubmit(form) {\n      if (form.invalid) {\n        return;\n      }\n\n      let authObs = new Observable();\n      const email = form.value.email;\n      const password = form.value.password;\n\n      if (this.isLoggedInMode) {\n        authObs = this.authService.loggedIn(email, password);\n      } else {\n        authObs = this.authService.signUp(email, password);\n      }\n\n      authObs.subscribe({\n        next: resData => {\n          console.log(resData);\n\n          this._successAuth.next(true);\n\n          this.authService._successAuth.next(true);\n\n          this.router.navigate(['/home']);\n        },\n        error: err => {\n          this.isError = true;\n          this.errorObj = err;\n        }\n      });\n      form.reset();\n    }\n\n  }\n\n  AuthComponent.ɵfac = function AuthComponent_Factory(t) {\n    return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  AuthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthComponent,\n    selectors: [[\"app-auth\"]],\n    decls: 20,\n    vars: 7,\n    consts: [[3, \"alertStatus\", \"errorObj\"], [3, \"ngSubmit\"], [\"authForm\", \"ngForm\"], [1, \"mb-3\"], [\"for\", \"email\", 1, \"form-label\"], [\"ngModel\", \"\", \"name\", \"email\", \"type\", \"email\", \"id\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"email\", \"ngModel\"], [\"id\", \"emailHelp\", \"class\", \"form-text\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"form-label\"], [\"ngModel\", \"\", \"name\", \"password\", \"type\", \"password\", \"id\", \"password\", \"required\", \"\", 1, \"form-control\"], [\"password\", \"ngModel\"], [\"id\", \"passwodHelp\", \"class\", \"form-text\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"click\"], [\"id\", \"emailHelp\", 1, \"form-text\"], [\"id\", \"passwodHelp\", 1, \"form-text\"]],\n    template: function AuthComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelement(0, \"app-alert\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_1_listener() {\n          i0.ɵɵrestoreView(_r5);\n\n          const _r0 = i0.ɵɵreference(2);\n\n          return ctx.onSubmit(_r0);\n        });\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Email address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 5, 6);\n        i0.ɵɵtemplate(8, AuthComponent_div_8_Template, 2, 0, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 8);\n        i0.ɵɵtext(11, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 9, 10);\n        i0.ɵɵtemplate(14, AuthComponent_div_14_Template, 2, 0, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 12);\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(17, \" | \");\n        i0.ɵɵelementStart(18, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_18_listener() {\n          return ctx.onSwitchMode();\n        });\n        i0.ɵɵtext(19);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(2);\n\n        const _r1 = i0.ɵɵreference(7);\n\n        const _r3 = i0.ɵɵreference(13);\n\n        i0.ɵɵproperty(\"alertStatus\", \"danger\")(\"errorObj\", ctx.errorObj);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", !_r1.valid && _r1.touched);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", !_r3.valid && _r3.touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isLoggedInMode ? \"Login\" : \"Sign up\", \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" Switch to \", !ctx.isLoggedInMode ? \"Login\" : \"Sign up\", \" Mode \");\n      }\n    },\n    directives: [i3.AlertComponent, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i4.RequiredValidator, i5.NgIf],\n    styles: [\"input.ng-valid.ng-touched[_ngcontent-%COMP%]{border-color:#5cb85c}input.ng-invalid.ng-touched[_ngcontent-%COMP%]{border-color:#d9534f}\"]\n  });\n  return AuthComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}